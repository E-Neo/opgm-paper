#+TITLE: Vertex-Centric: A Graph Matching Friendly On-Disk Index
#+AUTHOR: 崔延宣
#+LaTeX_CLASS: article
#+LaTeX_CLASS_OPTIONS: [11pt,a4paper]
#+LaTeX_HEADER: \usepackage{minted}
#+LaTeX_HEADER: \usepackage{fullpage}
#+LaTeX_HEADER: \usepackage{fancyvrb}
#+LaTeX_HEADER: \usepackage{enumitem}
#+LaTeX_HEADER: \usepackage{xeCJK}
#+LaTeX_HEADER: \usepackage{bbding}
#+LaTeX_HEADER: \usepackage{amsthm}
#+LaTeX_HEADER: \newtheorem{theorem}{Theorem}
#+LaTeX_HEADER: \newtheorem{lemma}{Lemma}
#+LaTeX_HEADER: \newtheorem{definition}{Definition}
#+LaTeX_HEADER: \usepackage{centernot}
#+LaTeX_HEADER: \usepackage{indentfirst}
#+LaTeX_HEADER: \usepackage{xcolor}
#+LaTeX_HEADER: \usepackage{array}
#+LaTeX_HEADER: \usepackage{booktabs}
#+LaTeX_HEADER: \usepackage[linesnumbered,ruled,noend]{algorithm2e}
#+LaTeX_HEADER: \usepackage{siunitx}
#+LaTeX_HEADER: \setlength\parindent{2em}
#+OPTIONS: toc:nil

* Introduction
  Graph matching is one of the most important applications of graph databases.
  In graph matching, a relative small *pattern graph* is used to match subgraphs of a relative large *data graph*.
  It is widely used in many fields, such as Twitter's recommendation systems\cite{DBLP:journals/pvldb/GuptaSGGZLL14,DBLP:journals/pvldb/SharmaJBLL16},
  electronic computer-aided design\cite{DBLP:conf/dac/OhlrichEGS93},
  protein-protein interaction (PPI) networks\cite{milenkovic2008uncovering},
  and COVID-19 epidemic emergency management\cite{info:doi/10.2196/26836}.

  图匹配问题通常有两种解决途径：一种是 tree based，另一种是 join based，
  这两种方法都需要底层存储能够快速地对邻接点拓扑进行检查。
  在图结构中，形如 $u_1 \leftrightarrows u_2$ 的这种 2-cycle 结构是一种很常见的模式，
  例如在社交网络中它可以表示互相关注的朋友关系。
  对 2-cycle 高效匹配具有重要现实意义。
  #+NAME: tab:2-cycle
  #+CAPTION: 数据图统计信息
  |------------------+---------------+---------------+-----------+------------|
  |                  | $\mid V \mid$ | $\mid E \mid$ | # 2-cycle |      ratio |
  |------------------+---------------+---------------+-----------+------------|
  | soc-Epinions1    |         75879 |        508837 |    103097 | 0.25409622 |
  | web-BerkStan     |        685230 |       7600595 |    951125 | 0.14303772 |
  | web-Google       |        875713 |       5105039 |    782988 | 0.18116121 |
  | soc-LiveJournal1 |       4847571 |      68993773 |  25624154 | 0.59083189 |
  |------------------+---------------+---------------+-----------+------------|
  #+TBLFM: @2$5..@>$5 = $4 / ($3 - $4)* Background

  然而现有的图存储和索引方法并不利于解决这种图匹配问题。
  一方面，现有的图存储方法，例如 CSC（只存出边）、CSR（只存入边）或者 linked list（存出边、入边）都将出边、入边的拓扑信息分离存储，
  导致在匹配 2-cycle 时不得不执行复杂的查找或者 join 计算，具有 $O(m^2)$ 的时间复杂度；
  另一方面，现有的图索引结构为了加速匹配常需要超线性增长的空间，可扩展性差。

  为了解决这些问题，我们提出了一种新的 vertex-centric graph index，将出入边的拓扑信息和邻接点直接存储在一起。
  使用这种索引匹配 2-cycle 只需 $O(m)$ 的时间复杂度；并且没有随机 I/O。

  power-law graph 中有些节点具有数量庞大的邻接点，匹配过程中遍历这些邻接点 I/O 开销会很大。
  我们注意到图匹配问题中，节点是具有标签的，用户只关注某些类型的邻接点。
  根据这一发现我们设计了一种局部索引结构，对邻接点根据标签分类存储，从而读取时可以按需读取。

  基于 vertex-centric graph index，我们设计了一种 star based graph matching engine。
  相较于现有的 star based matching algorithm，我们的方法可以避免拓扑信息丢失问题，从而较少中间结果即后续 join 的开销。
  为了避免 join based 方法具有的中间结果膨胀问题，
  我们采用 SuperRow 中间结果存储方法，及 pipeline SuperRow join 保证不会出现中间结果的超线性膨胀。

  最后通过实验，验证具有 xxx 的性能提升。
* Background
  - (formal definition) 读 FAST 文章，看它们的写作风格
  - current graph storage/index 及存在的问题
* Vertex-Centric Graph Index
  1. Vertex-Centric Graph Index (问题、解决方案、好处)
  2. Local Index
* Star Based Graph Matching
  1. star decomposition algorithms
  2. SuperRow
  3. pipeline SuperRow join
* Evaluation
  1. end to end comparison (Graphflow, CFL, Neo4j, NebulaGraph, 其他待定)
     - 分析存在的问题
     - 分析为什么比我们慢
     - 分析失败原因（内存不足）
  2. Effect of Vertex-Centric Index
     1. 变化 number of vertex labels 比较时间
        - vertex-centric with local index
        - vertex-centric without local index
        - in/out-edge split
     2. 和其他图索引结构比较空间大小
  3. Graph Matching
     1. 比较不同 star decomposition algorithms 产生的中间结果大小
     2. 测试 SuperRow compression ratio
  4. （待定：测不同内存大小下的 holistic/scan/join 性能）
* Archive
  [[file:archive/20210704.org][2021-07-04]]
* References
  :PROPERTIES:
  :UNNUMBERED: t
  :END:
  #+LaTeX: \label{sec:references}
  #+LaTeX: \addcontentsline{toc}{section}{\nameref{sec:references}}
  #+LaTeX: \renewcommand*{\refname}{\vspace*{-2em}}
  #+LaTeX: \bibliographystyle{acm}
  #+LaTeX: \bibliography{../refs}
